/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bibliotecaantonioestebanaguero.Vistas;

import bibliotecaantonioestebanaguero.AccesoADatos.EjemplarData;
import bibliotecaantonioestebanaguero.AccesoADatos.LectorData;
import bibliotecaantonioestebanaguero.AccesoADatos.LibroData;
import bibliotecaantonioestebanaguero.AccesoADatos.PrestamoData;
import bibliotecaantonioestebanaguero.AccesoADatos.RellenarCombos;
import bibliotecaantonioestebanaguero.entidades.Lector;
import bibliotecaantonioestebanaguero.entidades.Libro;
import bibliotecaantonioestebanaguero.entidades.Prestamo;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Antonio
 */
public class Prestamos extends javax.swing.JPanel {
    private List<Lector>listLec;
private List<Prestamo> listP;
    private List<Libro> listaL;
    private LibroData libData;
    private EjemplarData ejeData;
    private PrestamoData presData;
    private LectorData lecData;
 
    private Libro lib = new Libro();
    private Libro libroActual = null;

    private DefaultTableModel modelo;

    RellenarCombos re = new RellenarCombos();
    /**
     * Creates new form Principal
     */
    public Prestamos() {
        initComponents();
   libData = new LibroData();
        listaL = libData.listarLibro();
         modelo = new DefaultTableModel();
                         armarCabeceraPrestamo();
                         borrarFilas();
          re.RellenarComboBox("libro", "titulo",  jComboBox1);
           re.RellenarComboBox("lector", "nombre",  jComboBox2);
        DefaultTableModel modelo = new DefaultTableModel();
        JTable jtablaTitulo = new JTable(modelo);
         jComboBox2.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String opcionSeleccionada = (String)  jComboBox2.getSelectedItem();
            // Actualiza su tabla en función de la opción seleccionada
          //  actualizarTabla(opcionSeleccionada);
        }

    });

    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jBPrestar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jBAnularPrestamo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRbmostrarPrestamo = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("GENERAR PRESTAMO ");

        jBPrestar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBPrestar.setText("PRESTAR");
        jBPrestar.setEnabled(false);
        jBPrestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPrestarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("LECTOR ");

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });

        jBAnularPrestamo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBAnularPrestamo.setText("ANULAR PRESTAMO");
        jBAnularPrestamo.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("LIBRO");

        jRadioButton1.setText("jRadioButton1");

        jRbmostrarPrestamo.setText("jRadioButton2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jBPrestar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)
                        .addComponent(jBAnularPrestamo)))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(267, 267, 267))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jRbmostrarPrestamo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton1)
                .addGap(257, 257, 257))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRbmostrarPrestamo))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBPrestar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAnularPrestamo))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBPrestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPrestarActionPerformed
//        // TODO add your handling code here:


// int filaSeleccionada=jTable1.getSelectedRow();
//        if(filaSeleccionada!=-1){
//            Alumno a= (Alumno) CBoxAlumno.getSelectedItem();
//            int idMateria=(Integer)modelo.getValueAt(filaSeleccionada, 0);
//            String nombre=(String)modelo.getValueAt(filaSeleccionada, 1);
//            int anioMateria=(Integer)modelo.getValueAt(filaSeleccionada, 2);
//            Materia m=new Materia(idMateria, nombre, anioMateria, true);
//            
//            Inscripcion i=new Inscripcion(a,m,0);
//            inscData.guardarInscripcion(i);
//            borrarFilasTabla();
//    }

//       
//try {
//    
//    Integer idLector = Integer.parseInt(jTidLector.getText());
//    Integer idIsbn = Integer.parseInt(jTiDisbn.getText());
//
//    // Validaciones para los campos
//    if (idLector <= 0 || idIsbn <= 0) {
//        javax.swing.JOptionPane.showMessageDialog(this, "Los campos ID Lector y ID ISBN deben ser mayores que 0. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//        return;
//    }
//} catch (NumberFormatException ex) {
//    javax.swing.JOptionPane.showMessageDialog(this, "Los campos ID Lector y ID ISBN deben ser números enteros. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//    // Puedes mostrar un ToolTip en caso de error de formato si es necesario.
//    return;
//}
//     try {
// LectorData lecData= new LectorData();
//  Lector lec=new Lector();
//    Lector lectorActual=null;
//    int idLector = 0;
// // Validamos existencia del Lector
//            lecData.buscarLector(idLector);
//            if (idLector == null) {
//                javax.swing.JOptionPane.showMessageDialog(this, "No se encontró ningún Lector con ese numero de ID. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//              jTidLector .requestFocus();
//                return;
//            }
//            
//            
//            Libro lib = new Libro();
//     Libro libroActual = null;
//    int idIsbn = 0;
//            // Validamos existencia del libro
//            libData.buscarLibroPorIdLibro(idIsbn);
//            if (idIsbn == null){
//                javax.swing.JOptionPane.showMessageDialog(this, "No se encontró ningún libro con ese ID. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//                jTiDisbn.requestFocus();
//                return;
//            }
//            EjemplarData ejeData = new EjemplarData();
//    LibroData libData = new LibroData();
//   
//
//            // Validamos disponibilidad del ejemplar del libro.
//    ejeData.buscarEjemplarXIsbn(idIsbn);
//    ejeData.contarEjemplaresDisponibles(idIsbn);
//    ejeData.desactivarEjemplar(idLector);
//    ejeData.contarEjemplaresDisponibles(idIsbn);
//            //else if (currentBook.getAvailable() < 1) {
//                javax.swing.JOptionPane.showMessageDialog(this, "Ya no hay más libros disponibles con esa ID para prestar. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//                libroIdTxt.requestFocus();
//                return;
//            }
//            
//            DAOLendings daoLendings = new DAOLendingsImpl();
//            
//            // Validamos que el usuario no tenga ya ese libro prestado.
//            com.mycompany.models.Lendings currentLending = daoLendings.getLending(currentUser, currentBook);
//            if (currentLending != null) {
//                javax.swing.JOptionPane.showMessageDialog(this, "Esa persona ya cuenta con el préstamo de ese mismo Libro. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//                libroIdTxt.requestFocus();
//                return;
//            }
//
//            // Todo OK: Prestamos libro.
//            com.mycompany.models.Lendings lending = new com.mycompany.models.Lendings();
//            lending.setBook_id(currentBook.getId());
//            lending.setUser_id(currentUser.getId());
//            lending.setDate_out(Utils.getFechaActual());
//            daoLendings.registrar(lending);
//            
//            // Modificamos el libro restandole 1 en disponibilidad.
//            currentBook.setAvailable(currentBook.getAvailable() - 1);
//            daoBooks.modificar(currentBook);
//            
//            javax.swing.JOptionPane.showMessageDialog(this, "Libro ID: " + currentBook.getId() + " prestado exitosamente a " + currentUser.getName() + ".\n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
//            folioTxt.setText("");
//            libroIdTxt.setText("");
//        } catch (Exception e) {
//            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error al prestar el libro. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//            System.out.println(e.getMessage());
//        }
//                                          
//
    }//GEN-LAST:event_jBPrestarActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
//         int seleccion = jTable1.rowAtPoint(evt.getPoint());
//        jTisbn.setText(String.valueOf(jTable1.getValueAt(seleccion, 0)));
//        jTtitulo.setText(String.valueOf(jTable1.getValueAt(seleccion, 1)));
//        jTautor.setText(String.valueOf(jTable1.getValueAt(seleccion, 2)));
//        jTgenero.setText(String.valueOf(jTable1.getValueAt(seleccion, 4)));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2MouseClicked


    private void armarCabeceraPrestamo() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("IdPrestamo");
        filaCabecera.add("IdLector");
        filaCabecera.add("idEjemplar");
        filaCabecera.add("Fecha Prestamo");
        filaCabecera.add("Fecha Devolucion");
        filaCabecera.add("Estado Prestamo");
        filaCabecera.add("Estado");
        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jTable1.setModel(modelo);

    }

     private void borrarFilas() {
    try {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int filas = modelo.getRowCount();
        for (int f = filas - 1; f >= 0; f--) {
            modelo.removeRow(f);
        }
    } catch (NullPointerException ex) {
        JOptionPane.showMessageDialog(null, "Ocurrio un error: " + ex.getMessage());
    }
}

 
    private void obtenerLectoresPorPrestamo(){
     PrestamoData presData=new PrestamoData();
    //borrarFilasTabla();
   Prestamo selec = (Prestamo) jComboBox2.getSelectedItem();
    List <Prestamo> lista = (ArrayList) presData.obtenerLibrosNOPrestados(selec.getEjemplar().getIdEjemplar());
          
    for(Prestamo prestamo: lista){
            modelo.addRow(new Object[] {prestamo.getIdPrestamo(), prestamo.getLector().getIdLector(), prestamo.getEjemplar().getIdIsbn(), prestamo.getFechaPrestamo(), prestamo.getFechaDevolucion(), prestamo.getEstado(), prestamo.getEstado()});
            System.out.println(prestamo.getIdPrestamo());
    }
    }

    private void cargarDatosPrestados(){
      //borrarFilasTabla();
      Prestamo selec = (Prestamo) jComboBox2.getSelectedItem();
        List <Prestamo> lista = (ArrayList) presData.obtenerLibrosNOPrestados(selec.getEjemplar().getIdEjemplar());
          
    for(Prestamo prestamo: lista){
            modelo.addRow(new Object[] {prestamo.getIdPrestamo(), prestamo.getLector().getIdLector(), prestamo.getEjemplar().getIdIsbn(), prestamo.getFechaPrestamo(), prestamo.getFechaDevolucion(), prestamo.getEstado(), prestamo.getEstado()});
            System.out.println(prestamo.getIdPrestamo());
    }
    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAnularPrestamo;
    private javax.swing.JButton jBPrestar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<Lector> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRbmostrarPrestamo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
