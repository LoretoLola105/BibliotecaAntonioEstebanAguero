package bibliotecaantonioestebanaguero.Vistas;



import bibliotecaantonioestebanaguero.AccesoADatos.LectorData;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import bibliotecaantonioestebanaguero.entidades.Lector;

public class AltaLector extends javax.swing.JPanel {

    private LectorData lecData= new LectorData();
    private Lector lec=new Lector();
    private Lector lectorActual=null;



    public AltaLector() {
        initComponents();
       
    }




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        jTidLector = new javax.swing.JTextField();
        apPLbl = new javax.swing.JLabel();
        jTnombre = new javax.swing.JTextField();
        apMLbl = new javax.swing.JLabel();
        jTdni = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        domLbl = new javax.swing.JLabel();
        jTdomicilio = new javax.swing.JTextField();
        NUEVO = new javax.swing.JButton();
        phoneLbl = new javax.swing.JLabel();
        jTtelefono = new javax.swing.JTextField();
        jTemail = new javax.swing.JTextField();
        phoneLbl1 = new javax.swing.JLabel();
        BUSCAR = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        CheckBoxESTADO = new javax.swing.JCheckBox();
        ACTUALIZAR = new javax.swing.JButton();
        BORRAR = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        bg.setBackground(new java.awt.Color(51, 51, 51));

        title.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Registrar nuevo Lector");

        nameLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(255, 255, 255));
        nameLbl.setText("ID LECTOR");

        jTidLector.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTidLectorKeyTyped(evt);
            }
        });

        apPLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        apPLbl.setForeground(new java.awt.Color(255, 255, 255));
        apPLbl.setText("NOMBRE");

        jTnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTnombreKeyTyped(evt);
            }
        });

        apMLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        apMLbl.setForeground(new java.awt.Color(255, 255, 255));
        apMLbl.setText("DNI");

        jTdni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTdniKeyTyped(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(200, 10));

        domLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        domLbl.setForeground(new java.awt.Color(255, 255, 255));
        domLbl.setText("Domicilio");

        jTdomicilio.setToolTipText("");

        NUEVO.setBackground(new java.awt.Color(0, 0, 0));
        NUEVO.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        NUEVO.setText("NUEVO");
        NUEVO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NUEVO.setBorderPainted(false);
        NUEVO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NUEVO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUEVOActionPerformed(evt);
            }
        });

        phoneLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        phoneLbl.setForeground(new java.awt.Color(255, 255, 255));
        phoneLbl.setText("Email");

        jTtelefono.setToolTipText("");
        jTtelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTtelefonoActionPerformed(evt);
            }
        });

        jTemail.setToolTipText("");
        jTemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTemailActionPerformed(evt);
            }
        });
        jTemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTemailKeyReleased(evt);
            }
        });

        phoneLbl1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        phoneLbl1.setForeground(new java.awt.Color(255, 255, 255));
        phoneLbl1.setText("Telefono");

        BUSCAR.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BUSCAR.setText("Buscar");
        BUSCAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BUSCAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUSCARActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ESTADO");

        ACTUALIZAR.setBackground(new java.awt.Color(0, 0, 0));
        ACTUALIZAR.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ACTUALIZAR.setText("ACTUALIZAR");
        ACTUALIZAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ACTUALIZAR.setBorderPainted(false);
        ACTUALIZAR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ACTUALIZAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACTUALIZARActionPerformed(evt);
            }
        });

        BORRAR.setBackground(new java.awt.Color(0, 0, 0));
        BORRAR.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BORRAR.setText("BORRAR");
        BORRAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BORRAR.setBorderPainted(false);
        BORRAR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BORRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BORRARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(553, 553, 553))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(nameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(223, 223, 223))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(apPLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(182, 182, 182))
                                    .addComponent(jTnombre)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(apMLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(180, 180, 180))
                                    .addComponent(jTdni))
                                .addGap(68, 68, 68))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(jTidLector)
                                        .addGap(79, 79, 79)
                                        .addComponent(BUSCAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(CheckBoxESTADO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(266, 266, 266))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(NUEVO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ACTUALIZAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(31, 31, 31)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTdomicilio)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(domLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(220, 220, 220))
                                    .addComponent(jTtelefono)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(phoneLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(218, 218, 218))
                                    .addComponent(jTemail)
                                    .addComponent(phoneLbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(72, 72, 72))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(BORRAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(244, 244, 244))))))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(nameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTidLector, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUSCAR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(apPLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(apMLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTdni, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(CheckBoxESTADO))
                        .addGap(31, 31, 31)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NUEVO, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ACTUALIZAR, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(domLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTdomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTemail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(phoneLbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTtelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(BORRAR, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void NUEVOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUEVOActionPerformed
 
        limpiarCampos();
        lectorActual = null;

        
        
        
    }//GEN-LAST:event_NUEVOActionPerformed

    private void jTtelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTtelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTtelefonoActionPerformed

    private void jTemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTemailActionPerformed

    private void BUSCARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUSCARActionPerformed
        try {
            Integer id = Integer.parseInt(jTidLector.getText());
            lectorActual = lecData.buscarLector(id);
            if (lectorActual != null) {
                jTnombre.setText(lectorActual.getNombre().toLowerCase());
                jTdomicilio.setText(lectorActual.getDomicilio().toLowerCase());
                jTdni.setText(lectorActual.getDni() + "");
                jTtelefono.setText(lectorActual.getNumeroTel() + "");
                jTemail.setText(lectorActual.getEmail().toLowerCase());
               CheckBoxESTADO.setSelected(lectorActual.getEstado());

            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un numero de ID Lector válido. ");
        }
    }//GEN-LAST:event_BUSCARActionPerformed

    private void ACTUALIZARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACTUALIZARActionPerformed
        // TODO add your handling code here:
        try {
            Integer id = Integer.parseInt(jTidLector.getText());
            String nombre = jTnombre.getText().toLowerCase();
            String domicilio = jTdomicilio.getText().toLowerCase();
            int dni = Integer.parseInt(jTdni.getText()+"");
            int telefono = Integer.parseInt(jTtelefono.getText()+"");
            String email = jTemail.getText().toLowerCase();
            Boolean estado =  CheckBoxESTADO.isSelected();
            
            
        if (nombre.isEmpty() || domicilio.isEmpty() || email.isEmpty())  {
             JOptionPane.showMessageDialog(this, "No pueden existir campos vacíos.");
                  
                return;
      }

            if (lectorActual == null) {

                lectorActual = new Lector(nombre, dni, domicilio, email, telefono,  estado);
                lecData.guardarLector(lectorActual);

            } else {
                lectorActual.setIdLector(id);
                lectorActual.setNombre(nombre);
                lectorActual.setDni(dni);
                int numeroTel = 0;
                lectorActual.setNumeroTel(numeroTel);
                lectorActual.setEmail(email);
                lectorActual.setEstado(estado);
                lecData.modificarLector(lec);
                
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un numero de ID LECTOR válido. ");
        }

    }//GEN-LAST:event_ACTUALIZARActionPerformed

    private void BORRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BORRARActionPerformed
        // TODO add your handling code here:
         if (lectorActual != null) {
            //  int isbn=0;
            lecData.eliminarLector(lectorActual.getIdLector());
            lectorActual = null;
            limpiarCampos();

        } else {
            JOptionPane.showMessageDialog(this, "No hay un Lector seleccionado. ");
        }
    }//GEN-LAST:event_BORRARActionPerformed

    private void jTidLectorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTidLectorKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
    boolean numero = key >= '0' && key <= '9';
    
    if (!numero) {
        evt.consume();
        JOptionPane.showMessageDialog(this, "Solo se aceptan números naturales.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    if (jTidLector.getText().trim().length() == 10) {
        evt.consume();
        JOptionPane.showMessageDialog(this, "El ISBN no debe exceder los 10 dígitos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jTidLectorKeyTyped

    private void jTnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTnombreKeyTyped
        // TODO add your handling code here:
          // Verifica si el carácter no es una letra ni un espacio en blanco
    if (!(Character.isLetter(evt.getKeyChar())) && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
        evt.consume(); // Consume el carácter no válido
        // Muestra el mensaje de error solo una vez
        JOptionPane.showMessageDialog(this, "Solo se aceptan letras para introducir el nombre del Lector.", "Error", JOptionPane.ERROR_MESSAGE); 
    }
    }//GEN-LAST:event_jTnombreKeyTyped

    private void jTdniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTdniKeyTyped
        // TODO add your handling code here:
         int key = evt.getKeyChar();
    boolean numero = key >= '0' && key <= '9';
    
    if (!numero) {
        evt.consume();
        JOptionPane.showMessageDialog(this, "Solo se aceptan números naturales.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    if (jTdni.getText().trim().length() == 8) {
        evt.consume();
        JOptionPane.showMessageDialog(this, "El DNI no debe exceder los 8 dígitos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jTdniKeyTyped

    private void jTemailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTemailKeyReleased
        // TODO add your handling code here:
        // Convierte el JTextField a un objeto JTextField (asegúrate de que el nombre sea correcto)
    JTextField textField = (JTextField) evt.getSource();
    // Obtiene el texto actual en el JTextField
    String text = textField.getText();

    // Verifica si el carácter no es una letra, un espacio en blanco, el carácter '@', ni un número
    if (!(Character.isLetter(evt.getKeyChar())) && !(evt.getKeyChar() == KeyEvent.VK_SPACE) && evt.getKeyChar() != '@' && !Character.isDigit(evt.getKeyChar())) {
        evt.consume(); // Consume el carácter no válido
        JOptionPane.showMessageDialog(this, "Solo se aceptan letras, números y el símbolo '@' para introducir el correo electrónico.", "Error", JOptionPane.ERROR_MESSAGE);
    } else if (evt.getKeyChar() == '@' && text.contains("@")) {
        evt.consume(); // Consume el carácter '@' si ya existe uno en el campo
        JOptionPane.showMessageDialog(this, "El email solo puede contener un signo @.", "Error", JOptionPane.ERROR_MESSAGE);
    
}

    }//GEN-LAST:event_jTemailKeyReleased


    
    private void limpiarCampos() {
        jTidLector.setText("");
        jTnombre.setText("");
        jTdomicilio.setText("");
        jTdni.setText("");
        jTtelefono.setText("");
        jTemail.setText("");
        CheckBoxESTADO.setSelected(true);

    }
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ACTUALIZAR;
    private javax.swing.JButton BORRAR;
    private javax.swing.JButton BUSCAR;
    private javax.swing.JCheckBox CheckBoxESTADO;
    private javax.swing.JButton NUEVO;
    private javax.swing.JLabel apMLbl;
    private javax.swing.JLabel apPLbl;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel domLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTdni;
    private javax.swing.JTextField jTdomicilio;
    private javax.swing.JTextField jTemail;
    private javax.swing.JTextField jTidLector;
    private javax.swing.JTextField jTnombre;
    private javax.swing.JTextField jTtelefono;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JLabel phoneLbl;
    private javax.swing.JLabel phoneLbl1;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}