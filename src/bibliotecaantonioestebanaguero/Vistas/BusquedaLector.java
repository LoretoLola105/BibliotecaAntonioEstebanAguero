/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bibliotecaantonioestebanaguero.Vistas;


import bibliotecaantonioestebanaguero.AccesoADatos.EjemplarData;
import bibliotecaantonioestebanaguero.AccesoADatos.LectorData;
import bibliotecaantonioestebanaguero.AccesoADatos.RellenarCombos;
import bibliotecaantonioestebanaguero.Utilidades.CustomRendererLectores;
import bibliotecaantonioestebanaguero.entidades.Lector;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Otras
 */
public class BusquedaLector extends javax.swing.JPanel {

    private RowFilter<DefaultTableModel, Object> rowFilter;
    private TableRowSorter<DefaultTableModel> trs; // Declarar el TableRowSorter como una variable de instancia.
    private List<Lector> listaLec;
    private EjemplarData ejeData;
 
    private LectorData lecData;
    private Lector lec;
    private DefaultTableModel modelo;

    RellenarCombos re = new RellenarCombos();

    /**
     * Creates new form Mision
     */
    public BusquedaLector() {
        initComponents();

     lecData = new LectorData();
        listaLec = lecData.listarLectores();
        modelo = new DefaultTableModel();
        re.RellenarComboBox("lector", "nombre", jComboBox1);
        rowFilter = RowFilter.regexFilter("(?i)", 1);
        ejeData = new EjemplarData();
       
        cargaLectores();
        //configurarTabla();
        armarCabeceraTabla();
        //armarCabeceraTabla();
      jComboBox1.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String opcionSeleccionada = (String) jComboBox1.getSelectedItem();
            // Actualiza su tabla en función de la opción seleccionada
            actualizarTabla(opcionSeleccionada);
        }

    });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTbusqueda = new javax.swing.JTextField();
        jBeliminar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(774, 429));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("FILTRO BUSQUEDA:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("BUSQUEDA RAPIDA:");

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox1KeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTbusqueda.setToolTipText("");
        jTbusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTbusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTbusquedaKeyTyped(evt);
            }
        });

        jBeliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBeliminar.setText("ELIMINAR");
        jBeliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBeliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTbusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel2)
                                    .addGap(46, 46, 46)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(559, 559, 559)
                                .addComponent(jBeliminar)))
                        .addGap(0, 59, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTbusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBeliminar)
                        .addGap(13, 13, 13))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBeliminarActionPerformed
        // TODO add your handling code here:
   
    int filaSeleccionada = jTable1.getSelectedRow();
    if (filaSeleccionada != -1) {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        // Supongamos que obtienes el idLector de la fila seleccionada
        Object idLector = jTable1.getValueAt(filaSeleccionada, 0);
        // Utiliza lecData.eliminarlector(idLector) para eliminar el lector de tus datos relacionados
        lecData.eliminarLector((int) idLector);
        modelo.removeRow(filaSeleccionada);
    } else {
        JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna fila en la tabla para poder eliminar");
    }
    }//GEN-LAST:event_jBeliminarActionPerformed

    private void jTbusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTbusquedaKeyTyped
        // TODO add your handling code here:
        borrarFilas();
        for (Lector lec : lecData.listarLectores()) {

            if (lec.getNombre().toLowerCase().startsWith(jTbusqueda.getText().toLowerCase())) {
                modelo.addRow(new Object[]{
                    lec.getIdLector(),
                    lec.getNombre(),
                    lec.getDni(),
                    lec.getDomicilio(),
                    lec.getEmail(),
                    lec.getNumeroTel(),
                    lec.getEstado()});
        }
        }
    }//GEN-LAST:event_jTbusquedaKeyTyped

    private void jTbusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTbusquedaKeyReleased
        // TODO add your handling code here:
        borrarFilas();
        String nombre = null;

        for (Lector lec : lecData.listarLectores()) {

            if (lec.getNombre().toLowerCase().startsWith(jTbusqueda.getText().toLowerCase())) {
                modelo.addRow(new Object[]{
                    lec.getIdLector(),
                    lec.getNombre(),
                    lec.getDni(),
                    lec.getDomicilio(),
                    lec.getEmail(),
                    lec.getNumeroTel(),
                    lec.getEstado()});
        }
        }

    }//GEN-LAST:event_jTbusquedaKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyReleased
        // TODO add your handling code here:

        // TODO add your handling code here:
        String nombre = jTbusqueda.getText().toLowerCase();
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0); // Limpia la tabla antes de agregar los nuevos resultados.

        for (Lector lec : lecData.listarLectores()) {

            if (lec.getNombre().toLowerCase().startsWith(jTbusqueda.getText().toLowerCase())) {
                modelo.addRow(new Object[]{
                    lec.getIdLector(),
                    lec.getNombre(),
                    lec.getDni(),
                    lec.getDomicilio(),
                    lec.getEmail(),
                    lec.getNumeroTel(),
                    lec.getEstado()});

        }
        }

        jTable1.setModel(modelo);

    }//GEN-LAST:event_jComboBox1KeyReleased

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            // Obtén la opción seleccionada en el JComboBox
            String opcionSeleccionada = (String) jComboBox1.getSelectedItem();

            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            modelo.setRowCount(0); // Limpia la tabla antes de agregar los nuevos resultados.
            for (Lector lec : lecData.listarLectores()) {

                if (lec.getNombre().toLowerCase().startsWith(jTbusqueda.getText().toLowerCase())) {
                    modelo.addRow(new Object[]{
                        lec.getIdLector(),
                        lec.getNombre(),
                        lec.getDni(),
                        lec.getDomicilio(),
                        lec.getEmail(),
                        lec.getNumeroTel(),
                        lec.getEstado()
                    });

                    jTable1.setModel(modelo);
                }
            }
        }
      
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void cargaLectores() {
        for (Lector lec : listaLec) {
            jTable1.setModel(modelo);
        }
    }

    private void armarCabeceraTabla() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID Lector");
        filaCabecera.add("Nombre");
        filaCabecera.add("DNI");
        filaCabecera.add("Domicilio");
        filaCabecera.add("Email");
        filaCabecera.add("Numero Tel");
        filaCabecera.add("Estado");

        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }

        jTable1.setModel(modelo);

        // Aplica el renderer personalizado a la columna "Autor"
        int columnaNombre = 1;
        jTable1.getColumnModel().getColumn(columnaNombre).setCellRenderer(new CustomRendererLectores());
    }

private void borrarFilas() {
    try {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int filas = modelo.getRowCount();
        for (int f = filas - 1; f >= 0; f--) {
            modelo.removeRow(f);
        }
    } catch (NullPointerException ex) {
        JOptionPane.showMessageDialog(null, "Ocurrio un error: " + ex.getMessage());
    }
}
   

public void actualizarDatos(){
int fila =  jTable1.getSelectedRow();

int idLector = Integer.parseInt(this.jTable1.getValueAt(fila, 0).toString());
String nombre = jTable1.getValueAt(fila, 1).toString();
int  dni =  Integer.parseInt(jTable1.getValueAt(fila, 2).toString());
String domicilio = jTable1.getValueAt(fila, 3).toString();
String email = jTable1.getValueAt(fila, 4).toString();
int  NumeroTel =  Integer.parseInt(jTable1.getValueAt(fila, 5).toString());
String estado = jTable1.getValueAt(fila, 6).toString();
}

private void actualizarTabla(String opcionSeleccionada) {
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    modelo.setRowCount(0); // Borra la tabla antes de agregar nuevos resultados.

    for (Lector lec : lecData.listarLectores()) {
        if (opcionSeleccionada.equals("Todos") || lec.getNombre().toLowerCase().startsWith(opcionSeleccionada.toLowerCase())) {
            modelo.addRow(new Object[]{
                lec.getIdLector(),
                lec.getNombre(),
                lec.getDni(),
                lec.getDomicilio(),
                lec.getEmail(),
                lec.getNumeroTel(),
                lec.getEstado()
            });
        }
    }

    jTable1.setModel(modelo);
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBeliminar;
    private javax.swing.JComboBox<Lector> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTbusqueda;
    // End of variables declaration//GEN-END:variables
}
